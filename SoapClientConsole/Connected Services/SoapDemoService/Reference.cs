//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapClientConsole.SoapDemoService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoapDemoService.SoapDemoSoap")]
    public interface SoapDemoSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync(string message);
        
        // CODEGEN: Generating message contract since message GetTokenRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SoapClientConsole.SoapDemoService.GetTokenResponse GetToken(SoapClientConsole.SoapDemoService.GetTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetToken", ReplyAction="*")]
        System.Threading.Tasks.Task<SoapClientConsole.SoapDemoService.GetTokenResponse> GetTokenAsync(SoapClientConsole.SoapDemoService.GetTokenRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TokenHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string tokenNoField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string tokenNo {
            get {
                return this.tokenNoField;
            }
            set {
                this.tokenNoField = value;
                this.RaisePropertyChanged("tokenNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetToken", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTokenRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public SoapClientConsole.SoapDemoService.TokenHeader TokenHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string message;
        
        public GetTokenRequest() {
        }
        
        public GetTokenRequest(SoapClientConsole.SoapDemoService.TokenHeader TokenHeader, string message) {
            this.TokenHeader = TokenHeader;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTokenResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetTokenResult;
        
        public GetTokenResponse() {
        }
        
        public GetTokenResponse(string GetTokenResult) {
            this.GetTokenResult = GetTokenResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SoapDemoSoapChannel : SoapClientConsole.SoapDemoService.SoapDemoSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SoapDemoSoapClient : System.ServiceModel.ClientBase<SoapClientConsole.SoapDemoService.SoapDemoSoap>, SoapClientConsole.SoapDemoService.SoapDemoSoap {
        
        public SoapDemoSoapClient() {
        }
        
        public SoapDemoSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SoapDemoSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapDemoSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapDemoSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld(string message) {
            return base.Channel.HelloWorld(message);
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync(string message) {
            return base.Channel.HelloWorldAsync(message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SoapClientConsole.SoapDemoService.GetTokenResponse SoapClientConsole.SoapDemoService.SoapDemoSoap.GetToken(SoapClientConsole.SoapDemoService.GetTokenRequest request) {
            return base.Channel.GetToken(request);
        }
        
        public string GetToken(SoapClientConsole.SoapDemoService.TokenHeader TokenHeader, string message) {
            SoapClientConsole.SoapDemoService.GetTokenRequest inValue = new SoapClientConsole.SoapDemoService.GetTokenRequest();
            inValue.TokenHeader = TokenHeader;
            inValue.message = message;
            SoapClientConsole.SoapDemoService.GetTokenResponse retVal = ((SoapClientConsole.SoapDemoService.SoapDemoSoap)(this)).GetToken(inValue);
            return retVal.GetTokenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SoapClientConsole.SoapDemoService.GetTokenResponse> SoapClientConsole.SoapDemoService.SoapDemoSoap.GetTokenAsync(SoapClientConsole.SoapDemoService.GetTokenRequest request) {
            return base.Channel.GetTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<SoapClientConsole.SoapDemoService.GetTokenResponse> GetTokenAsync(SoapClientConsole.SoapDemoService.TokenHeader TokenHeader, string message) {
            SoapClientConsole.SoapDemoService.GetTokenRequest inValue = new SoapClientConsole.SoapDemoService.GetTokenRequest();
            inValue.TokenHeader = TokenHeader;
            inValue.message = message;
            return ((SoapClientConsole.SoapDemoService.SoapDemoSoap)(this)).GetTokenAsync(inValue);
        }
    }
}
